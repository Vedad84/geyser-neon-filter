version: "3.7"

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24
          gateway: 10.1.0.1

x-clickhouse-common: &clickhouse-common
  image: docker.io/clickhouse/clickhouse-server:22.6.9.11-alpine
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144

services:
  clickhouse01:
    <<: *clickhouse-common
    container_name: clickhouse01
    hostname: clickhouse01
    ports:
      - 9000:9000
      - 8123:8123
      - 9181:9181
    networks:
      network:
        ipv4_address: 10.1.0.2
    volumes:
      - "./clickhouse/configs/clickhouse01:/etc/clickhouse-server/config.d/"
      - "./clickhouse/configs/common/docker_related_config.xml:/etc/clickhouse-server/config.d/docker_related_config.xml"
      - "./clickhouse/configs/common/clickhouse_servers.xml:/etc/clickhouse-server/config.d/clickhouse_servers.xml"

  clickhouse02:
    <<: *clickhouse-common
    container_name: clickhouse02
    hostname: clickhouse02
    ports:
      - 9001:9000
      - 8124:8123
      - 9182:9181
    networks:
      network:
        ipv4_address: 10.1.0.3
    volumes:
      - "./clickhouse/configs/clickhouse02:/etc/clickhouse-server/config.d/"
      - "./clickhouse/configs/common/docker_related_config.xml:/etc/clickhouse-server/config.d/docker_related_config.xml"
      - "./clickhouse/configs/common/clickhouse_servers.xml:/etc/clickhouse-server/config.d/clickhouse_servers.xml"

  clickhouse03:
    <<: *clickhouse-common
    container_name: clickhouse03
    hostname: clickhouse03
    ports:
      - 9002:9000
      - 8125:8123
      - 9183:9181
    networks:
      network:
        ipv4_address: 10.1.0.4
    volumes:
      - "./clickhouse/configs/clickhouse03:/etc/clickhouse-server/config.d/"
      - "./clickhouse/configs/common/docker_related_config.xml:/etc/clickhouse-server/config.d/docker_related_config.xml"
      - "./clickhouse/configs/common/clickhouse_servers.xml:/etc/clickhouse-server/config.d/clickhouse_servers.xml"

  clickhouse04:
    <<: *clickhouse-common
    container_name: clickhouse04
    hostname: clickhouse04
    ports:
      - 9003:9000
      - 8126:8123
      - 9184:9181
    networks:
      network:
        ipv4_address: 10.1.0.5
    volumes:
      - "./clickhouse/configs/clickhouse04:/etc/clickhouse-server/config.d/"
      - "./clickhouse/configs/common/docker_related_config.xml:/etc/clickhouse-server/config.d/docker_related_config.xml"
      - "./clickhouse/configs/common/clickhouse_servers.xml:/etc/clickhouse-server/config.d/clickhouse_servers.xml"
  kafka:
    image: docker.io/bitnami/kafka:3.3.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - 9092:9092
    networks:
      network:
        ipv4_address: 10.1.0.6
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "kafka:9092",
          "--list"
        ]
      interval: 3s
      timeout: 3s
      retries: 3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.2
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      network:
        ipv4_address: 10.1.0.7
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: curl -f -LI schema-registry:8081
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 15s

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8080:8080"
    networks:
      network:
        ipv4_address: 10.1.0.8
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  kafka-producer:
    image: docker.io/cnfldemos/kafka-connect-datagen:0.6.0-7.2.1
    user: 0:0
    restart: "no"
    command:
      - /bin/sh
      - -c
      - |
        dnf -y update && dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && dnf -y install p7zip p7zip-plugins
        7za x /var/json-data/kafka_topics.7z -o/var/json-data/ -aos
        kafka-console-producer --broker-list kafka:29092 --topic update_slot < /var/json-data/update_slot.topic
        kafka-console-producer --broker-list kafka:29092 --topic notify_block < /var/json-data/notify_block.topic
        kafka-console-producer --broker-list kafka:29092 --topic notify_transaction < /var/json-data/notify_transaction.topic
        kafka-console-producer --broker-list kafka:29092 --topic update_account < /var/json-data/update_account.topic
    volumes:
      - ./json-data/kafka_topics.7z:/var/json-data/kafka_topics.7z
    depends_on:
      schema-registry:
        condition: service_healthy
    networks:
      network:
        ipv4_address: 10.1.0.9

  clickhouse-client:
    image: docker.io/clickhouse/clickhouse-server:22.6.9.11-alpine
    restart: "no"
    volumes:
      - ./clickhouse:/var/clickhouse
    command:
      - /bin/sh
      - -c
      - |
        clickhouse-client --host clickhouse01 --queries-file /var/clickhouse/create_update_slot.sql
        clickhouse-client --host clickhouse01 --queries-file /var/clickhouse/create_notify_block.sql
    depends_on:
      kafka-producer:
        condition: service_completed_successfully
    networks:
      network:
        ipv4_address: 10.1.0.10
